opt_parms= nlm(garchEstimation,start_parms,
returns = returns,  ar = ar, ma = ma,
threshhold = threshhold, th_value = th_value, data_threshhold = data_threshhold,
type=type, distribution=distribution,
print.level=2,iterlim=1000, check.analyticals=1)
names_coefs = c("exp_ret","constant", paste0("AR",c(1:ar)), paste0("MA",c(1:ar)), "threshhold_parm", "df_t")
names_coefs
c(opt_parms$estimate[1], opt_parms$estimate[2:(2+ar+ma)]^2,opt_parms$estimate[(3+ar+ma)], opt_parms$estimate[(4+ar+ma)])
returns=ts_r$rub
ar = 1
ma = 1
threshhold = F
th_value  = 0 # not optimized within fct
data_threshhold = 0
type = "GARCH"
distribution ="t"
# my function
start_parms=c(rep(0.5,4),6)
opt_parms= nlm(garchEstimation,start_parms,
returns = returns,  ar = ar, ma = ma,
threshhold = threshhold, th_value = th_value, data_threshhold = data_threshhold,
type=type, distribution=distribution,
print.level=2,iterlim=1000, check.analyticals=1)
names_coefs = c("exp_ret","constant", paste0("AR",c(1:ar)), paste0("MA",c(1:ar)), "threshhold_parm", "df_t")
names_coefs
c(opt_parms$estimate[1], opt_parms$estimate[2:(2+ar+ma)]^2,opt_parms$estimate[(3+ar+ma)], opt_parms$estimate[(4+ar+ma)])           # make sure to revert squares in parms
# my function
start_parms=c(rep(0.5,4),0,6)
opt_parms= nlm(garchEstimation,start_parms,
returns = returns,  ar = ar, ma = ma,
threshhold = threshhold, th_value = th_value, data_threshhold = data_threshhold,
type=type, distribution=distribution,
print.level=2,iterlim=1000, check.analyticals=1)
names_coefs = c("exp_ret","constant", paste0("AR",c(1:ar)), paste0("MA",c(1:ar)), "threshhold_parm", "df_t")
names_coefs
c(opt_parms$estimate[1], opt_parms$estimate[2:(2+ar+ma)]^2,opt_parms$estimate[(3+ar+ma)], opt_parms$estimate[(4+ar+ma)])
par.start=c(rep(0.5,4),0,6)
my.optpar= nlm(my.loglike.t,par.start,iterlim=1000,print.level=1)
my.optpar$estimate
returns = ts_r$oil
par.start=c(rep(0.5,4),0,6)
my.optpar= nlm(my.loglike.t,par.start,iterlim=1000,print.level=1)
my.optpar$estimate
# step 1) find optimal GARCH 1/1 for full sample. remove first max_lags obs since they are not used by TreeGarch either
source("scripts/garchFunction.R") # functions
par.start=c(rep(0.5,4),0,6)
my.optpar= nlm(my.loglike.t,par.start,iterlim=1000,print.level=1)
my.optpar$estimate
source("scripts/garchFunction.R") # functions
# inputs fct
returns=ts_r$rub
ar = 1
ma = 1
threshhold = F
th_value  = 0 # not optimized within fct
data_threshhold = 0
type = "GARCH"
distribution ="t"
start_parms = c(0, 0.1, 0.9,0.1,0,6)
opt_parms= nlm(garchEstimation,start_parms,
returns = returns,  ar = ar, ma = ma,
threshhold = threshhold, th_value = th_value, data_threshhold = data_threshhold,
type=type, distribution=distribution,
print.level=1,iterlim=1000, check.analyticals=1)
opt_parms$estimate
par.start=c(rep(0.5,4),0,6)
my.optpar= nlm(my.loglike.t,par.start,iterlim=1000,print.level=1)
my.optpar$estimate
returns=ts_r$oil
ar = 1
ma = 1
threshhold = F
th_value  = 0 # not optimized within fct
data_threshhold = 0
type = "GARCH"
distribution ="t"
start_parms = c(0, 0.1, 0.9,0.1,0,6)
opt_parms= nlm(garchEstimation,start_parms,
returns = returns,  ar = ar, ma = ma,
threshhold = threshhold, th_value = th_value, data_threshhold = data_threshhold,
type=type, distribution=distribution,
print.level=1,iterlim=1000, check.analyticals=1)
opt_parms$estimate
# Audrino fct
par.start=c(rep(0.5,4),0,6)
my.optpar= nlm(my.loglike.t,par.start,iterlim=1000,print.level=1)
my.optpar$estimate
opt_parms$estimate
opt_parms= nlm(garchEstimation,start_parms,
returns = returns,  ar = ar, ma = ma,
threshhold = threshhold, th_value = th_value, data_threshhold = data_threshhold,
type=type, distribution=distribution,
print.level=1,iterlim=1000, check.analyticals=1)
opt_parms$estimate
distribution ="normal"
start_parms = c(0, 0.1, 0.9,0.1,0,6)
opt_parms= nlm(garchEstimation,start_parms,
returns = returns,  ar = ar, ma = ma,
threshhold = threshhold, th_value = th_value, data_threshhold = data_threshhold,
type=type, distribution=distribution,
print.level=1,iterlim=1000, check.analyticals=1)
opt_parms$estimate
opt_parms$minimum
m1=garchFit(returns~garch(1,1),data=returns,trace=F)
summary(m1)
returns=ts_r$oil
ar = 1
ma = 1
threshhold = F
th_value  = 0 # not optimized within fct
data_threshhold = 0
type = "GARCH"
distribution ="normal"
start_parms = c(0, 0.1, 0.9,0.1,0,6)
opt_parms= nlm(garchEstimation,start_parms,
returns = returns,  ar = ar, ma = ma,
threshhold = threshhold, th_value = th_value, data_threshhold = data_threshhold,
type=type, distribution=distribution,
print.level=1,iterlim=1000, check.analyticals=1)
opt_parms$estimate
save =  opt_parms$estimate
source("scripts/garchFunction.R") # functions
# inputs fct
returns=ts_r$oil
ar = 1
ma = 1
threshhold = F
th_value  = 0 # not optimized within fct
data_threshhold = 0
type = "GARCH"
distribution ="normal"
start_parms = c(0, 0.1, 0.9,0.1,0,6)
opt_parms= nlm(garchEstimation,start_parms,
returns = returns,  ar = ar, ma = ma,
threshhold = threshhold, th_value = th_value, data_threshhold = data_threshhold,
type=type, distribution=distribution,
print.level=1,iterlim=1000, check.analyticals=1)
opt_parms$estimate
# inputs fct
returns=ts_r$oil
ar = 1
ma = 1
threshhold = F
th_value  = 0 # not optimized within fct
data_threshhold = 0
type = "GARCH"
distribution ="normal"
start_parms = c(0, 0.1, 0.9,0.1)
opt_parms= nlm(garchEstimation,start_parms,
returns = returns,  ar = ar, ma = ma,
threshhold = threshhold, th_value = th_value, data_threshhold = data_threshhold,
type=type, distribution=distribution,
print.level=1,iterlim=1000, check.analyticals=1)
opt_parms$estimate
source("scripts/garchFunction.R") # functions
# inputs fct
returns=ts_r$oil
ar = 1
ma = 1
threshhold = F
th_value  = 0 # not optimized within fct
data_threshhold = 0
type = "GARCH"
distribution ="normal"
start_parms = c(0, 0.1, 0.9,0.1)
opt_parms= nlm(garchEstimation,start_parms,
returns = returns,  ar = ar, ma = ma,
threshhold = threshhold, th_value = th_value, data_threshhold = data_threshhold,
type=type, distribution=distribution,
print.level=1,iterlim=1000, check.analyticals=1)
source("scripts/garchFunction.R") # functions
# inputs fct
returns=ts_r$oil
ar = 1
ma = 2
threshhold = F
th_value  = 0 # not optimized within fct
data_threshhold = 0
type = "GARCH"
distribution ="normal"
start_parms = c(0, 0.1, 0.9,0.1)
opt_parms= nlm(garchEstimation,start_parms,
returns = returns,  ar = ar, ma = ma,
threshhold = threshhold, th_value = th_value, data_threshhold = data_threshhold,
type=type, distribution=distribution,
print.level=1,iterlim=1000, check.analyticals=1)
source("scripts/garchFunction.R") # functions
# inputs fct
returns=ts_r$oil
ar = 1
ma = 2
threshhold = F
th_value  = 0 # not optimized within fct
data_threshhold = 0
type = "GARCH"
distribution ="normal"
start_parms = c(0, 0.1, 0.9,0.1)
opt_parms= nlm(garchEstimation,start_parms,
returns = returns,  ar = ar, ma = ma,
threshhold = threshhold, th_value = th_value, data_threshhold = data_threshhold,
type=type, distribution=distribution,
print.level=1,iterlim=1000, check.analyticals=1)
source("scripts/garchFunction.R") # functions
# inputs fct
returns=ts_r$oil
ar = 1
ma = 2
threshhold = F
th_value  = 0 # not optimized within fct
data_threshhold = 0
type = "GARCH"
distribution ="normal"
start_parms = c(0, 0.1, 0.9,0.1,4)
opt_parms= nlm(garchEstimation,start_parms,
returns = returns,  ar = ar, ma = ma,
threshhold = threshhold, th_value = th_value, data_threshhold = data_threshhold,
type=type, distribution=distribution,
print.level=1,iterlim=1000, check.analyticals=1)
source("scripts/garchFunction.R") # functions
# inputs fct
returns=ts_r$oil
ar = 3
ma = 2
threshhold = F
th_value  = 0 # not optimized within fct
data_threshhold = 0
type = "GARCH"
distribution ="normal"
start_parms = c(0, 0.1, 0.9,0.1,4)
opt_parms= nlm(garchEstimation,start_parms,
returns = returns,  ar = ar, ma = ma,
threshhold = threshhold, th_value = th_value, data_threshhold = data_threshhold,
type=type, distribution=distribution,
print.level=1,iterlim=1000, check.analyticals=1)
returns=ts_r$oil
ar = 3
ma = 2
threshhold = F
th_value  = 0 # not optimized within fct
data_threshhold = 0
type = "GARCH"
distribution ="normal"
start_parms = c(0, 0.1, 0.9,0.1,4,1,1)
opt_parms= nlm(garchEstimation,start_parms,
returns = returns,  ar = ar, ma = ma,
threshhold = threshhold, th_value = th_value, data_threshhold = data_threshhold,
type=type, distribution=distribution,
print.level=1,iterlim=1000, check.analyticals=1)
start_parms = rep((2+ar+ma),0.5),0,6)
start_parms = c(rep((2+ar+ma),0.5),0,6)
start_parms
# inputs fct
returns=ts_r$oil
ar = 3
ma = 2
threshhold = F
th_value  = 0 # not optimized within fct
data_threshhold = 0
type = "GARCH"
distribution ="normal"
start_parms = c(rep((2+ar+ma),0.5),0,6)
start_parms
start_parms = c(rep(0.5,(2+ar+ma)),0,6)
start_parms
start_parms = c(rep(0.5,(2+ar+ma)),0,6) # initialize AR / MA with 0.5, threshhold with 0, DF with 6
opt_parms$estimate
start_parms = c(0,0.1, rep(0.9,ar), rep(0.1,ma),0,6) # initialize AR / MA with 0.5, threshhold with 0, DF with 6
source("scripts/garchFunction.R") # functions
# inputs fct
returns=ts_r$oil
ar = 3
ma = 2
threshhold = F
th_value  = 0 # not optimized within fct
data_threshhold = 0
type = "GARCH"
distribution ="normal"
start_parms = c(0,0.1, rep(0.9,ar), rep(0.1,ma),0,6) # initialize parms
opt_parms= nlm(garchEstimation,start_parms,
returns = returns,  ar = ar, ma = ma,
threshhold = threshhold, th_value = th_value, data_threshhold = data_threshhold,
type=type, distribution=distribution,
print.level=1,iterlim=1000, check.analyticals=1)
source("scripts/garchFunction.R") # functions
# inputs fct
returns=ts_r$oil
ar = 3
ma = 2
threshhold = F
th_value  = 0 # not optimized within fct
data_threshhold = 0
type = "GARCH"
distribution ="normal"
start_parms = c(0,0.1, rep(0.9,ar), rep(0.1,ma),0,6) # initialize parms
opt_parms= nlm(garchEstimation,start_parms,
returns = returns,  ar = ar, ma = ma,
threshhold = threshhold, th_value = th_value, data_threshhold = data_threshhold,
type=type, distribution=distribution,
print.level=1,iterlim=1000, check.analyticals=1)
returns=ts_r$oil
ar = 1
ma = 1
threshhold = F
th_value  = 0 # not optimized within fct
data_threshhold = 0
type = "GARCH"
distribution ="normal"
start_parms = c(0,0.1, rep(0.9,ar), rep(0.1,ma),0,6) # initialize parms
opt_parms= nlm(garchEstimation,start_parms,
returns = returns,  ar = ar, ma = ma,
threshhold = threshhold, th_value = th_value, data_threshhold = data_threshhold,
type=type, distribution=distribution,
print.level=1,iterlim=1000, check.analyticals=1)
opt_parms$estimate
returns=ts_r$oil
ar = 2
ma = 1
threshhold = F
th_value  = 0 # not optimized within fct
data_threshhold = 0
type = "GARCH"
distribution ="normal"
start_parms = c(0,0.1, rep(0.9,ar), rep(0.1,ma),0,6) # initialize parms
opt_parms= nlm(garchEstimation,start_parms,
returns = returns,  ar = ar, ma = ma,
threshhold = threshhold, th_value = th_value, data_threshhold = data_threshhold,
type=type, distribution=distribution,
print.level=1,iterlim=1000, check.analyticals=1)
opt_parms$estimate
start_parms = c(0,0.1, rep(0.9,ar), rep(0.1,ma),0,6) # initialize parms
start_parms
returns=ts_r$oil
ar = 2
ma = 1
threshhold = F
th_value  = 0 # not optimized within fct
data_threshhold = 0
type = "GARCH"
distribution ="normal"
start_parms = c(0,0.1, rep(0.5,ar), rep(0.1,ma),0,6) # initialize parms
opt_parms= nlm(garchEstimation,start_parms,
returns = returns,  ar = ar, ma = ma,
threshhold = threshhold, th_value = th_value, data_threshhold = data_threshhold,
type=type, distribution=distribution,
print.level=1,iterlim=1000, check.analyticals=1)
returns=ts_r$oil
ar = 2
ma = 1
threshhold = F
th_value  = 0 # not optimized within fct
data_threshhold = 0
type = "GARCH"
distribution ="normal"
start_parms = c(0,0.1, rep(0.3,ar), rep(0.1,ma),0,6) # initialize parms
opt_parms= nlm(garchEstimation,start_parms,
returns = returns,  ar = ar, ma = ma,
threshhold = threshhold, th_value = th_value, data_threshhold = data_threshhold,
type=type, distribution=distribution,
print.level=1,iterlim=1000, check.analyticals=1)
source("scripts/garchFunction.R") # functions
# inputs fct
returns=ts_r$oil
ar = 1
ma = 2
threshhold = F
th_value  = 0 # not optimized within fct
data_threshhold = 0
type = "GARCH"
distribution ="normal"
start_parms = c(0,0.1, rep(0.5,ar), rep(0.1,ma),0,6) # initialize parms
opt_parms= nlm(garchEstimation,start_parms,
returns = returns,  ar = ar, ma = ma,
threshhold = threshhold, th_value = th_value, data_threshhold = data_threshhold,
type=type, distribution=distribution,
print.level=1,iterlim=1000, check.analyticals=1)
m1=garchFit(returns~garch(1,2),data=returns,trace=F)
summary(m1)
summary(m1)[["Coefficient(s)"]]
m1
m1
summary(m1)[["Coefficient(s)"]]
2.7472e-01
returns=ts_r$oil
ar = 1
ma = 2
threshhold = F
th_value  = 0 # not optimized within fct
data_threshhold = 0
type = "GARCH"
distribution ="normal"
start_parms = c(0,0.1, rep(0.5,ar), rep(0.1,ma),0,6) # initialize parms
opt_parms= nlm(garchEstimation,start_parms,
returns = returns,  ar = ar, ma = ma,
threshhold = threshhold, th_value = th_value, data_threshhold = data_threshhold,
type=type, distribution=distribution,
print.level=1,iterlim=1000, check.analyticals=1)
source("scripts/garchFunction.R") # functions
# inputs fct
returns=ts_r$oil
ar = 1
ma = 2
threshhold = F
th_value  = 0 # not optimized within fct
data_threshhold = 0
type = "GARCH"
distribution ="normal"
start_parms = c(0,0.1, rep(0.5,ar), rep(0.1,ma),0,6) # initialize parms
opt_parms= nlm(garchEstimation,start_parms,
returns = returns,  ar = ar, ma = ma,
threshhold = threshhold, th_value = th_value, data_threshhold = data_threshhold,
type=type, distribution=distribution,
print.level=1,iterlim=1000, check.analyticals=1)
opt_parms= nlm(garchEstimation,start_parms,
returns = returns,  ar = ar, ma = ma,
threshhold = threshhold, th_value = th_value, data_threshhold = data_threshhold,
type=type, distribution=distribution,
print.level=1,iterlim=1000, check.analyticals=T)
returns
opt_parms= nlm(garchEstimation,start_parms,
returns = returns,  ar = ar, ma = ma,
threshhold = threshhold, th_value = th_value, data_threshhold = data_threshhold,
type=type, distribution=distribution,
print.level=1,iterlim=1000, check.analyticals=T)
returns=ts_r$oil
ar = 1
ma = 1
threshhold = F
th_value  = 0 # not optimized within fct
data_threshhold = 0
type = "GARCH"
distribution ="normal"
start_parms = c(0,0.1, rep(0.5,ar), rep(0.1,ma),0,6) # initialize parms
opt_parms= nlm(garchEstimation,start_parms,
returns = returns,  ar = ar, ma = ma,
threshhold = threshhold, th_value = th_value, data_threshhold = data_threshhold,
type=type, distribution=distribution,
print.level=1,iterlim=1000, check.analyticals=T)
par.start=c(rep(0.5,4),0,6)
my.optpar= nlm(my.loglike.t,par.start,iterlim=1000,print.level=1)
my.optpar$estimate
opt_parms= nlm(garchEstimation,start_parms,
returns = returns,  ar = ar, ma = ma,
threshhold = threshhold, th_value = th_value, data_threshhold = data_threshhold,
type=type, distribution=distribution,
print.level=1,steptol = 1e-5, iterlim=1000, check.analyticals=T)
opt_parms= nlm(garchEstimation,start_parms,
returns = returns,  ar = ar, ma = ma,
threshhold = threshhold, th_value = th_value, data_threshhold = data_threshhold,
type=type, distribution=distribution,
print.level=1,steptol = 1e-8, iterlim=1000, check.analyticals=T)
opt_parms$estimate
ar = 1
ma = 2
threshhold = F
th_value  = 0 # not optimized within fct
data_threshhold = 0
type = "GARCH"
distribution ="normal"
start_parms = c(0,0.1, rep(0.5,ar), rep(0.1,ma),0,6) # initialize parms
opt_parms= nlm(garchEstimation,start_parms,
returns = returns,  ar = ar, ma = ma,
threshhold = threshhold, th_value = th_value, data_threshhold = data_threshhold,
type=type, distribution=distribution,
print.level=1,steptol = 1e-6, iterlim=1000, check.analyticals=T)
opt_parms$estimate
source("scripts/garchFunction.R") # functions
# inputs fct
returns=ts_r$oil
ar = 1
ma = 2
threshhold = F
th_value  = 0 # not optimized within fct
data_threshhold = 0
type = "GARCH"
distribution ="normal"
start_parms = c(0,0.1, rep(0.5,ar), rep(0.1,ma),0,6) # initialize parms
opt_parms= nlm(garchEstimation,start_parms,
returns = returns,  ar = ar, ma = ma,
threshhold = threshhold, th_value = th_value, data_threshhold = data_threshhold,
type=type, distribution=distribution,
print.level=1,steptol = 1e-6, iterlim=1000, check.analyticals=T)
returns=ts_r$oil
ar = 2
ma = 1
threshhold = F
th_value  = 0 # not optimized within fct
data_threshhold = 0
type = "GARCH"
distribution ="normal"
start_parms = c(0,0.1, rep(0.5,ar), rep(0.1,ma),0,6) # initialize parms
opt_parms= nlm(garchEstimation,start_parms,
returns = returns,  ar = ar, ma = ma,
threshhold = threshhold, th_value = th_value, data_threshhold = data_threshhold,
type=type, distribution=distribution,
print.level=1,steptol = 1e-6, iterlim=1000, check.analyticals=T)
source("scripts/garchFunction.R") # functions
# inputs fct
returns=ts_r$oil
ar = 2
ma = 1
threshhold = F
th_value  = 0 # not optimized within fct
data_threshhold = 0
type = "GARCH"
distribution ="normal"
start_parms = c(0,0.1, rep(0.5,ar), rep(0.1,ma),0,6) # initialize parms
opt_parms= nlm(garchEstimation,start_parms,
returns = returns,  ar = ar, ma = ma,
threshhold = threshhold, th_value = th_value, data_threshhold = data_threshhold,
type=type, distribution=distribution,
print.level=1,steptol = 1e-6, iterlim=1000, check.analyticals=T)
opt_parms$estimate
